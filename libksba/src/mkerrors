#!/bin/sh
# mkerrors - Extract error strings from ksba.h
#            and create C source for ksba_strerror
#       Copyright (C) 2001 g10 Code GmbH
#
# This file is part of KSBA.
#
# KSBA is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# KSBA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.


cat <<EOF
/* Generated automatically by mkerrors */
/* Do not edit! */

#include <stdio.h>
#include "ksba.h"

/**
 * ksba_strerror:
 * @err:  Error code
 *
 * This function returns a textual representaion of the given
 * errocode. If this is an unknown value, a string with the value
 * is returned (which is hold in a static buffer).
 *
 * Return value: String with the error description.
 **/
const char *
ksba_strerror (KsbaError err)
{
  const char *s;
  static char buf[25];

  switch (err)
    {
    case -1: s="EOF"; break;
EOF

awk '
/KSBA_No_Error/    { okay=1 }
!okay              {next}
/}/                { exit 0 }
/KSBA_[A-Za-z_]*/ { print_code($1) }


function print_code( s )
{
printf "    case %s: s=\"", s ;
gsub(/_/, " ", s );
printf "%s\"; break;\n", substr(s,6);
}
'

cat <<EOF
    default:  sprintf (buf, "ec=%d", err ); s=buf; break;
    }

  return s;
}

EOF
